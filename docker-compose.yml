networks:
  bridge: {}

services:
  app:
    container_name: edge_auctions_app
    build: .
    env_file: .env
    restart: always
    ports:
      - 1337:1337
    environment:
      RUN_MODE: app
      CONFIG_PATH: ./config/config.yml
      DB_URL: postgresql://${DB_USER}:${DB_PASSWORD}@edge_auctions_db:5432/${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      BROKER_URL: ${BROKER_URL}
      RESULT_BACKEND_URL: ${RESULT_BACKEND_URL}
      SHOP_SECRET: ${SHOP_SECRET}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_API_IDENTIFIER: ${AUTH0_API_IDENTIFIER}
      AUTH0_APP_SECRET_KEY: ${AUTH0_APP_SECRET_KEY}
      AUTH0_LOGIN_REDIRECT_URI: ${AUTH0_LOGIN_REDIRECT_URI}
      AUTH0_LOGOUT_REDIRECT_URI: ${AUTH0_LOGOUT_REDIRECT_URI}
    volumes:
      - ./logs:/app/logs
      - ./images:/app/images
      - ./config:/app/config
    depends_on:
      - db
      - dramatiq
    networks:
      - bridge
  dramatiq:
    container_name: edge_auctions_dramatiq
    build: .
    env_file: .env
    restart: always
    environment:
      RUN_MODE: worker
      CONFIG_PATH: ./config/config.yml
      DB_URL: postgresql://${DB_USER}:${DB_PASSWORD}@edge_auctions_db:5432/${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      BROKER_URL: ${BROKER_URL}
      RESULT_BACKEND_URL: ${RESULT_BACKEND_URL}
      SHOP_SECRET: ${SHOP_SECRET}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_API_IDENTIFIER: ${AUTH0_API_IDENTIFIER}
      AUTH0_APP_SECRET_KEY: ${AUTH0_APP_SECRET_KEY}
      AUTH0_LOGIN_REDIRECT_URI: ${AUTH0_LOGIN_REDIRECT_URI}
      AUTH0_LOGOUT_REDIRECT_URI: ${AUTH0_LOGOUT_REDIRECT_URI}
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - redis
    networks:
      - bridge
  db:
    container_name: edge_auctions_db
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: edge_auctions_db
      PGDATA: /db
    volumes:
      - ./db:/db
    networks:
      - bridge
  redis:
    container_name: edge_auctions_redis
    image: bitnami/redis:latest
    restart: always
    environment:
      ALLOW_EMPTY_PASSWORD: true
    volumes:
      - ./redis/:/bitnami/redis/data
    networks:
      - bridge
#  client:
#    container_name: edge_auctions_client
#    image: app_client
#    restart: always
#    volumes:
#      - /etc/letsencrypt:/etc/letsencrypt
#      - ./sockets/:/sockets
#      - ./images:/static/dist/images
#    depends_on:
#      - app
#    networks:
#      - bridge
#    ports:
#      - 80:80
#      - 443:443
