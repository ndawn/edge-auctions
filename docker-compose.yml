networks:
  bridge: {}

services:
  app:
    container_name: edge_auctions_app
    build: .
    env_file: .env
    restart: unless-stopped
    environment:
      RUN_MODE: app
      CONFIG_PATH: ./config/config.yml
      DB_URL: postgresql://${DB_USER}:${DB_PASSWORD}@edge_auctions_db:5432/${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      BROKER_URL: ${BROKER_URL}
      RESULT_BACKEND_URL: ${RESULT_BACKEND_URL}
      WS_CONNECTION_BROKER_URL: ${WS_CONNECTION_BROKER_URL}
      PASSWORD_KEY: ${PASSWORD_KEY}
      VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY}
      VAPID_SUB: ${VAPID_SUB}
      SHOP_ID: ${SHOP_ID}
      SHOP_API_KEY: ${SHOP_API_KEY}
      SHOP_API_SECRET: ${SHOP_API_SECRET}
      AUTH0_ADMIN_CLIENT_ID: ${AUTH0_ADMIN_CLIENT_ID}
      AUTH0_ADMIN_CLIENT_SECRET: ${AUTH0_ADMIN_CLIENT_SECRET}
      AUTH0_MANAGEMENT_CLIENT_ID: ${AUTH0_MANAGEMENT_CLIENT_ID}
      AUTH0_MANAGEMENT_CLIENT_SECRET: ${AUTH0_MANAGEMENT_CLIENT_SECRET}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_API_IDENTIFIER: ${AUTH0_API_IDENTIFIER}
      AUTH0_APP_SECRET_KEY: ${AUTH0_APP_SECRET_KEY}
      AUTH0_LOGIN_REDIRECT_URI: ${AUTH0_LOGIN_REDIRECT_URI}
      AUTH0_LOGOUT_REDIRECT_URI: ${AUTH0_LOGOUT_REDIRECT_URI}
    volumes:
      - ./logs:/app/logs
      - ./images:/app/images
      - ./config:/app/config
    depends_on:
      - db
      - dramatiq
    networks:
      - bridge
  dramatiq:
    container_name: edge_auctions_dramatiq
    build: .
    env_file: .env
    restart: unless-stopped
    environment:
      RUN_MODE: worker
      CONFIG_PATH: ./config/config.yml
      DB_URL: postgresql://${DB_USER}:${DB_PASSWORD}@edge_auctions_db:5432/${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      BROKER_URL: ${BROKER_URL}
      RESULT_BACKEND_URL: ${RESULT_BACKEND_URL}
      WS_CONNECTION_BROKER_URL: ${WS_CONNECTION_BROKER_URL}
      PASSWORD_KEY: ${PASSWORD_KEY}
      VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY}
      VAPID_SUB: ${VAPID_SUB}
      SHOP_ID: ${SHOP_ID}
      SHOP_API_KEY: ${SHOP_API_KEY}
      SHOP_API_SECRET: ${SHOP_API_SECRET}
      AUTH0_ADMIN_CLIENT_ID: ${AUTH0_ADMIN_CLIENT_ID}
      AUTH0_ADMIN_CLIENT_SECRET: ${AUTH0_ADMIN_CLIENT_SECRET}
      AUTH0_MANAGEMENT_CLIENT_ID: ${AUTH0_MANAGEMENT_CLIENT_ID}
      AUTH0_MANAGEMENT_CLIENT_SECRET: ${AUTH0_MANAGEMENT_CLIENT_SECRET}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_API_IDENTIFIER: ${AUTH0_API_IDENTIFIER}
      AUTH0_APP_SECRET_KEY: ${AUTH0_APP_SECRET_KEY}
      AUTH0_LOGIN_REDIRECT_URI: ${AUTH0_LOGIN_REDIRECT_URI}
      AUTH0_LOGOUT_REDIRECT_URI: ${AUTH0_LOGOUT_REDIRECT_URI}
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - redis
    networks:
      - bridge
  db:
    container_name: edge_auctions_db
    image: postgres:alpine
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: edge_auctions_db
      PGDATA: /db
    volumes:
      - ./db:/db
    networks:
      - bridge
  redis:
    container_name: edge_auctions_redis
    image: bitnami/redis:latest
    restart: unless-stopped
    environment:
      ALLOW_EMPTY_PASSWORD: true
    volumes:
      - ./redis/:/bitnami/redis/data
    networks:
      - bridge
  client:
    container_name: edge_auctions_nginx
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt
      - ./client_ui/dist:/dist/ui
      - ./client_admin/dist:/dist/admin
      - ./images:/images
    depends_on:
      - app
    networks:
      - bridge
    ports:
      - 80:80
      - 443:443
